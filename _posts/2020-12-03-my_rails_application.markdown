---
layout: post
title:      "My Rails application"
date:       2020-12-03 18:14:35 +0000
permalink:  my_rails_application
---


I chose to approach this project by focusing on setting up third party user authentication first. Thankfully, our instructor told us about the Devise gem which ended up being of major help to me. I followed the online instructions for installing the gem and making it work with another gem, Omniauth, which we were familiar with through previous labs. With the help of Devise and Omniauth, I successfully set up my app to allow a user to sign in through third party provider, Github. As Devise handles the vast majority of user functionality, I was then able to move on to creating other models and relationships. My idea for the project was to create an app which allows a user to create a collection of many movies (through the 'has_many' relation) and have access to many categories ('has_many through' relation), similar to genres, for the movies. Consequently, categories would have many users through movies. I used movies as my joins table, with user_id and category_id as its foreign keys. After making the necessary tables, I migrated the database and moved on to my routes, controllers, and views. I also made sure I had some validations for my models to protect my app from invalid data, for example, requiring the presence of title, release year, and category for a movie. As the project required nested routes, I made a nested new form for creating a movie, which allows the user to pick from their existing categories or create a new category for that new movie, so that upon submission the movie would be linked to that category. Moreover, I made a nested show route for categories, so that when the user goes to see a specific category, the route would take them to their movies in that specific category. I also created a scope, which functions similarly to a filter and allows the user to view a list of their movies that they have already seen. The difficulty of this project for me laid in figuring out the correct nested routes in the forms, as there were moments in which I got confused by the similarity of the routes' names, as well as the order of things in the nested form, but I worked it out in the end. I didn't have any issues with the user authentication part of the project. I used the Bootstrap gem for design elements of my app, albeit minimally. Overall, I am happy with how this project turned out.
